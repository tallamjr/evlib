name: Rust

on:
  push:
    branches:
      - main
      - master
    paths:
      - "**.rs"
      - "Cargo.toml"
      - "Cargo.lock"
      - "rust-toolchain.toml"
  pull_request:
    paths:
      - "**.rs"
      - "Cargo.toml"
      - "Cargo.lock"
      - "rust-toolchain.toml"
  workflow_dispatch:

jobs:
  rust-check:
    name: Rust Check
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install HDF5 (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install hdf5
          echo "HDF5_DIR=$(brew --prefix hdf5)" >> $GITHUB_ENV
          echo "Adding HDF5 to PKG_CONFIG_PATH"
          echo "PKG_CONFIG_PATH=$(brew --prefix hdf5)/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV

      - name: Install HDF5 (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libhdf5-dev

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Clippy
        run: cargo clippy --no-default-features --features "python" -- -D clippy::erasing_op

      - name: Cargo check
        run: cargo check --all

      - name: Cargo build
        run: cargo build --release
